
@{
    ViewBag.Title = "AdminTicketGeneration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/BootToast/bootoast.css" rel="stylesheet" />
<style>
    .autocomplete-suggestions {
        border: 1px solid #999;
        background: #FFF;
        overflow: auto;
    }

    .autocomplete-suggestion {
        padding: 2px 5px;
        white-space: nowrap;
        overflow: hidden;
    }

    .autocomplete-selected {
        background: #F0F0F0;
    }

    .autocomplete-suggestions strong {
        font-weight: normal;
        color: #3399FF;
    }

    .autocomplete-group {
        padding: 2px 5px;
    }

        .autocomplete-group strong {
            display: block;
            border-bottom: 1px solid #000;
        }
    #AdminSubjectModal {
    overflow:hidden !important;
    }
    .autocomplete-suggestions {
    /*overflow:hidden !important;*/
     position:fixed !important;
     z-index: 1000000000000000000000000000000000000000000000000 !important;
    }
    #subjectvalidation {
        position: absolute;
        margin-left: -173px;
    }
</style>
<link href="~/Content/CustomStyle.css" rel="stylesheet" />
<div class="container " style="margin-left:0px;">
    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <h2></h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button type="button" id="ButonOpen" class="createAdminTicketGeneration btn btn-success"><span class="fas fa-fw fa-floppy-o"></span> Create Ticket Subject</button>
        </div>
    </div>


</div>
<div id="modal-container">
    <div class="modal-background">
        <div class="modal fade" id="AdminSubjectModal" role="dialog" data-backdrop="static" data-keyboard="false" style="position:absolute">
            <div class="modal-dialog">

                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Create Ticket Subject Form</h4>
                        <button type="button" class="close close-custom-button" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div id="appendAdminTicketGenerationPartialView">

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


<div>
    <table style="width: 700px;margin-left: 30px; margin-top:15px;" class="table">
        <thead>
            <tr>
                <th scope="col">Subject Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.ticketSubjectList)
            {
                <tr>
                    <td>@item.subjectName</td>
                    <td data-id="@item.Id" style="width: 100px!important">
                        <span style="font-size: 16px;cursor:pointer;display:inline" class="createAdminTicketGeneration fa fa-edit text-primary"> Edit</span>
                        @*@Html.ActionLink(" ", "DeleteAdminTicket", new { id = item.Id }, new { @style = "font-size: 16px;", @class = "fa fa-fw fa-trash text-danger" })*@
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>
@section scripts {
    <script src="~/Content/BootToast/bootoast.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @* Auto Complete Plugin For Auto Suggestion From DB *@

    <script src="~/Scripts/jquery.autocomplete.js"></script>

    <script type="text/javascript">

        subjects = [];


        $(function () {

            getAllSubjects();

        });
        $(".createAdminTicketGeneration").click(function () {
            var id = 0;
            id = $(this).parent("td").data("id");
            $.ajax({
                url: "/Chats/_AdminTicketGenerationPartialView?id=" + id,
                type: "get"
            }).done(function (res) {
                $("#appendAdminTicketGenerationPartialView").html(res);
                //$("").click();
                OpenModal();
                $("#AdminSubjectModal").modal('toggle');


                $('#subjectName2').autocomplete({
                    lookup: subjects,
                    onSelect: function (suggestion) {
                        var value = suggestion.value;

                        $.ajax({
                            url: "/Chats/isSubjectExist?value=" + value,
                            type: "get"
                        }).done(function (response) {
                            if (response === "yes") {
                                $("#ticketCreateButton").prop('disabled', true);
                                $("#subjectvalidation").html("<br/> <strong>Name already exist</strong>");
                            } else {
                                $("#ticketCreateButton").prop('disabled', false);
                                $("#subjectvalidation").text("");
                            }

                        });
                        //alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
                    }
                });

                jQuery('#subjectName2').on('input propertychange paste', function () {
                    var value = $("#subjectName").val();

                    $.ajax({
                        url: "/Chats/isSubjectExist?value=" + value,
                        type: "get"
                    }).done(function (response) {
                        debugger;
                        if (response === "yes") {
                            debugger;
                            $("#subjectvalidation").html("<br/> <strong>Name already exist</strong>");
                            $("#ticketCreateButton").prop('disabled', true);
                        } else {
                            $("#subjectvalidation").text("");
                            $("#ticketCreateButton").prop('disabled', false);

                        }

                    });
                });

            });

        })

        function getAllSubjects() {

            $.ajax({
                url: "/Chats/autosuggestion",
                type: "Get"
            }).done(function (response) {
                for (var i = 0; i < response.length; i++) {
                    subjects.push({ value: response[i], data: response[i] });
                }
            });
        }

        $('#PriorityId').change(function () {
            var id = $(this).val();

            $.ajax({
                url: "/Chats/getPriorityTime?id=" + id,
                type: "get"
            }).done(function (response) {
                if (response) {
                    $("#TAT").val(response)
                } else {

                }
            });

        });

        function SubmitForm(Form, AddUpdate) {
            var form = $("#" + Form);
            form.validate();
            var formdata = false;
            if (window.FormData) {
                formdata = new FormData(form[0]);
            }
            if (form.valid() == false) {
                return false;
            }
            var urltosend = form.attr('action');
            //var datatosend = $("#createform").serialize();
            var datatosend = formdata ? formdata : form.serialize();
            $(".loader").show();
            $.ajax({
                type: 'POST',
                url: urltosend,
                data: datatosend,
                cache: false,
                contentType: false,
                processData: false,
                success: function (json) {
                    $(".loader").hide();
                    $("#AdminSubjectModal").modal('toggle');
                    if (json == "True") {
                        var msg = "Saved Successfully";
                        var titl = "Saved!";

                        getAllSubjects();
                        clear();

                        swal({
                            title: titl,
                            text: msg,
                            icon: "success",
                            button: "Ok",
                            confirmButtonColor: "#1ab394",
                        });
                        window.location.href = "/Chats/AdminTicketGeneration";

                    }
                    else if (json == "Edit") {
                        titl = "Updated!";
                        msg = "Updated Successfully!";

                        getAllSubjects();
                        clear();

                        swal({
                            title: titl,
                            text: msg,
                            icon: "success",
                            button: "Ok",
                            confirmButtonColor: "#1ab394",
                        });

                        window.location.href = "/Chats/AdminTicketGeneration";
                    }
                    else {
                        swal("Error!", "Error Accured :" + json, "error");
                    }
                },
                error: function (xhr, status, error) {
                    $(".loader").hide();
                    var err = eval("(" + xhr.responseText + ")");
                    swal("Error!", "Error Accured :" + err.Message, "error");
                }
            });

            return false;
        }

        function clear() {
            $('#AdminTicketGenerationForm').trigger("reset");

        }

        //$('#ButonOpen').click(function () {
        //    $('#modal-container').removeAttr('class').addClass("ButonOpen");
        //    $('body').addClass('modal-active');
        //});
        function OpenModal() {
            $('#modal-container').removeAttr('class').addClass("ButonOpen");
            $('body').addClass('modal-active');
        }
        $('.close-custom-button').click(function () {
            debugger;
            $('#modal-container').addClass('out');
            $('body').removeClass('modal-active');
        });
    </script>
}








@*<div class="row">
        <div class="col-lg-6 col-md-6 col-sm-12">
            @using (Html.BeginForm("AdminTicketGeneration", "Chats", FormMethod.Post, new { @id = "CreateTickets" }))
            {
                @Html.AntiForgeryToken()
                <h4>Create Ticket</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Ticket Subject", htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.subjectName, new { htmlAttributes = new { @required = "required", @placeholder = "Ticket Subject", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.subjectName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Ticket Type", htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.DropDownListFor(
                            item => item.TypeId,CCM.Helpers.CommonFunctions.GetTicketType(),
                            "Select Ticket Type", new { @required = "required", @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Ticket Status", htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.DropDownListFor(
                            item => item.StatusId,CCM.Helpers.CommonFunctions.GetTicketStatus(),
                            "Select Ticket Status", new { @required = "required", @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Ticket TAT", htmlAttributes: new { @class = "control-label " })
                    <div class="">
                        @Html.TextBox("TAT", null, new { @required = "required", @id = "TAT", @placeholder = "Ticket TAT", @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Creator Notes", htmlAttributes: new { @class = "control-label" })
                    <div class="">

                    </div>
                </div>
                <div class="form-group">
                    <div class="pull-right">
                        <input type="button" onclick="SubmitForm('')" value="Create" class="btn btn-primary" />
                        <input type="reset" class="btn btn-default" />

                    </div>
                </div>
            }
        </div>
    </div>*@