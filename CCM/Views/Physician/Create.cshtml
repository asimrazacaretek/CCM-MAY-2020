@model CCM.Models.Physician

<link href='https://clinicaltables.nlm.nih.gov/autocomplete-lhc-versions/15.1.1/autocomplete-lhc_jQueryUI.min.css' rel="stylesheet">
<div class="container">


    @if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="row">
            <div class="col-sm-9 text-center" style="background-color: azure">
                <h3>@ViewBag.Message</h3>

                @if (!string.IsNullOrEmpty(ViewBag.Password))
                {
                    <p>Login Id: @Model.Email</p>
                    <p>Temporary Password: @ViewBag.Password</p>
                }
            </div>
        </div>
        <br />
    }

    <br />
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createphyscian", enctype = "multipart/form-data", role = "form" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6">
        <h3>Create New Physician</h3>
        <hr />
        <div class="form-group">
            <label class="control-label col-md-4">
                Search
            </label>


            <div class="col-md-8">
                <input type="text" id="searchnpi" class="form-control border-input" placeholder="Search by NPI,Name or Number" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NPI, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NPI, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.NPI, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Specialty, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Specialty, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MainPhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.MainPhoneNumber, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.MainPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "form-control border-input" } })
                @Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="file" name="Photo" id="fileUpload" class="form-control border-input" accept=".png,.jpg,.jpeg,.gif,.tif" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create New Physician" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
    @*<div class="form-horizontal col-md-6">
        <h3>Billing Rates</h3>
        <hr />
        <div class="form-group">
            @Html.Label("CCM 20 Minutes - CPT 99490 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99490Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Simple CCM 30 Minutes - CPT 99491 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99491Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Complex CCM 60 Minutes - CPT 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99487Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Complex CCM 30 Minutes - CPT 99489 + 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99489Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <h3>Invoice Rate</h3>
        <hr />
        <div class="form-group">
            @Html.Label("CCM 20 Minutes - CPT 99490 *", htmlAttributes: new { @class = "control-label col-md-8 " })
            <div class="col-md-3">
                @Html.Editor("CPT99490Invoice", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Simple CCM 30 Minutes - CPT 99491 *", htmlAttributes: new { @class = "control-label col-md-8 " })
            <div class="col-md-3">
                @Html.Editor("CPT99491Invoice", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Complex CCM 60 Minutes - CPT 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99487Invoice", new { htmlAttributes = new { @class = "form-control border-input  numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Complex CCM 30 Minutes - CPT 99489 + 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
            <div class="col-md-3">
                @Html.Editor("CPT99489Invoice", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

            </div>
        </div>
    </div>*@
    }
</div>
<script src='https://clinicaltables.nlm.nih.gov/autocomplete-lhc-versions/15.1.1/autocomplete-lhc_jQuery.min.js'></script>


@Scripts.Render("~/bundles/jqueryval")
<script>
    new Def.Autocompleter.Search('searchnpi', 'https://clinicaltables.nlm.nih.gov/api/npi_idv/v3/search?df=NPI,name.full,addr_practice.full,addr_mailing.full,addr_practice.phone,addr_mailing.phone,provider_type'
        /*{ tableFormat: true, valueCols: [0], colHeaders: ['NPI', 'Name', 'Gender', 'Type', 'Practice Address', 'Mailing Address', 'Phone1', 'Phone2'] }*/);
    Def.Autocompleter.Event.observeListSelections('searchnpi', function () {
        if ($("#searchnpi").val() != "") {
            var drugField = $('#searchnpi')[0];
            var drugFieldVal = drugField.value;
            var searchvalues = drugFieldVal.split(' - ');
            var autocomp = drugField.autocomp;
            $("#NPI").val(searchvalues[0]);
            var fullname = searchvalues[1].split(',');
            $("#FirstName").val(fullname[1]);
            $("#LastName").val(fullname[0]);
            $("#Address1").val(searchvalues[2]);
            $("#Address2").val(searchvalues[3]);
            var MainPhoneNumber = searchvalues[4];
            var MobilePhoneNumber = searchvalues[5];
            $("#MainPhoneNumber").val(MainPhoneNumber.replace(/[- )(]/g, ''));
            $("#MobilePhoneNumber").val(MobilePhoneNumber.replace(/[- )(]/g, ''));
            //$("#MainPhoneNumber").val(searchvalues[4]);
            //$("#MobilePhoneNumber").val(searchvalues[5]);
            $("#Specialty").val(searchvalues[6]);
            $("#searchnpi").val('');

        }
       
    });
</script>
<script type="text/javascript">

    $(document).ready(function () {
        $(".numbers-only").keypress(function (e) {
            if (e.which == 46) {
                if ($(this).val().indexOf('.') != -1) {
                    return false;
                }
            }

            if (e.which != 8 && e.which != 0 && e.which != 46 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
        $('#createphyscian').submit(function (event) {
            var isvalidform = true;
            $(".numbers-only").each(function () {
                if ($(this).val() == "") {
                    isvalidform = false;
                }
            });
            if (isvalidform == false) {
                event.preventDefault();
            }
        });
    });
</script>