@model CCM.Models.FinalCarePlanNotes
@using CCM.Helpers




@{

    var cycle = CategoryCycleStatusHelper.GetPatientNewOrOldCycleByCategory(Model.PatientId, BillingCodeHelper.cmmBillingCatagoryid);


}
<style>
    input[type="submit"] {
        margin-left: 15px;
    }

    #previouscareplan .col-md-6, .newcareplane .col-md-6, #previouscareplan .col-md-12, .newcareplane .col-md-12 {
        padding-right: 8px;
        padding-left: 8px;
    }

    .finalcareplanbuttondiv {
        margin-left: 1px !important;
    }
</style>
@*@Html.Action("_CcmActivityLinks", "CcmStatus", new { patientId = Model.PatientId })*@
@*<h3 class="pageTitle text-info">FINAL CARE PLAN NOTES</h3>*@
<div class="row">
    <div class="table-responsive">
        <div class="scroll-wraper">
            <div class="fixedpostitiondivmessage">
                <label>Data auto saved</label>
            </div>
            <div id="divMedicationsList">

            </div>
            <div id="previouscareplan">
                @Html.Action("PreviousCarePlan", "FinalCarePlanNotes", new { patientId = Model.PatientId, isNew = false, cycle = Model.Cycle })
            </div>
            @using (Html.BeginForm("_Create", "FinalCarePlanNotes", FormMethod.Post, new { id = "frmfinalcareplane", role = "form" }))
            {
                @Html.ValidationSummary()

                @Html.HiddenFor(model => model.PatientId)
                @Html.HiddenFor(model => model.Cycle)
                <input type="hidden" value="@Model.Id" name="Id" />

                <fieldset disabled=" @(cycle != Model.Cycle ? "disabled":null)" >

                    <div class="form-horizontal col-md-6 newcareplane" style="width:100%">
                        <h3>New Care Plan ( @Model.CarePlanCreatedOn.Value.Date.ToString("MMM") @Model.CarePlanCreatedOn.Value.Date.ToString("yy") )</h3>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Patient Summary</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PatientSummary, new { @class = "form-control border-input", rows = "10" })
                                        @Html.ValidationMessageFor(model => model.PatientSummary, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Medical History</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.HealthConcerns, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Drug Utilization Review</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.DrugUtillizationReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">



                                    <label class="col-md-12">Current Blood Pressure and Glucose Reading</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.BloodPressureGlucoseReading, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>

                                    <br>
                                    <label class="col-md-12">Diabetic screening: Retinal Eye Exam, Podiatry Exam and last A1C result </label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DiabeticScreening, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Critical Medical Complaints:</label>
                                    <div class="col-md-12">

                                        &nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalChestPain, true) @Html.LabelFor(model => model.CriticalChestPain, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalBreathShortness, true) @Html.LabelFor(model => model.CriticalBreathShortness, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.NewWound, true) @Html.LabelFor(model => model.NewWound, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.Bleedinggums, true) @Html.LabelFor(model => model.Bleedinggums, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.Nosebleed, true) @Html.LabelFor(model => model.Nosebleed, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.Bloodinurine, true) @Html.LabelFor(model => model.Bloodinurine, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.Isurinemalodorous, true) @Html.LabelFor(model => model.Isurinemalodorous, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.Suddenincreasedswelling, true) @Html.LabelFor(model => model.Suddenincreasedswelling, new { @style = "font-weight: normal" })



                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalSeverePain, true) @Html.LabelFor(model => model.CriticalSeverePain, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalMoodChange, true) @Html.LabelFor(model => model.CriticalMoodChange, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalSpeechChange, true) @Html.LabelFor(model => model.CriticalSpeechChange, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalHeadache, true) @Html.LabelFor(model => model.CriticalHeadache, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalBloodSugar, true) @Html.LabelFor(model => model.CriticalBloodSugar, new { @style = "font-weight: normal" })
                                        <br>&nbsp;&nbsp;&nbsp;&nbsp;@Html.CheckBoxFor(model => model.CriticalBloodPressure, true) @Html.LabelFor(model => model.CriticalBloodPressure, new { @style = "font-weight: normal" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>Skin assessment: Do you check 2-3 times a week?</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.SkinAssesment,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "Yes", Text = "Yes"},
                                                new {Value = "No", Text = "No"}

                                            }, "Value", "Text", Model),
                                        "Skin assessment", new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>Diaper change: Do you change it every 2 hours?</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.Diaperchange,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "Yes", Text = "Yes"},
                                                new {Value = "No", Text = "No"}

                                            }, "Value", "Text", Model),
                                        "Diaperchange", new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>DME supply</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.DMEsupply,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "Wedge pillow", Text = "Wedge pillow"},
                                                new {Value = "Gel mattress", Text = "Gel mattress"},
                                                new {Value = "Bootie/heel protector", Text = "Bootie/heel protector"},
                                                new {Value = "O2 saturation monitor", Text = "O2 saturation monitor"},
                                                new {Value = "Glucometer", Text = "Glucometer"}


                                            }, "Value", "Text", Model),
                                         new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>Is the patient bed bound?</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.isPatientBedbound,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "Yes", Text = "Yes"},
                                                new {Value = "No", Text = "No"}

                                            }, "Value", "Text", Model),
                                        "Patient Bed Bound", new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Ability to perform IADL and ADL</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.AbilityPerformIADL, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Sensory assessment on vision, hearing and speech</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.AssessmentVisionHearingSpeech, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Fall and Ambulation Assessment</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.FallAmbulationAssessment, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>How Would You Describe Your Health?</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.HealthRating,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "1", Text = "1 - Worst"},
                                                new {Value = "2", Text = "2"},
                                                new {Value = "3", Text = "3"},
                                                new {Value = "4", Text = "4"},
                                                new {Value = "5", Text = "5"},
                                                new {Value = "6", Text = "6"},
                                                new {Value = "7", Text = "7"},
                                                new {Value = "8", Text = "8"},
                                                new {Value = "9", Text = "9"},
                                                new {Value = "10", Text = "10 - Best"}
                                            }, "Value", "Text", Model),
                                        "Quality of Life at the Moment", new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Able to Accomplish Your Daily Chores, Tasks and Responsibilities?</label>
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(
                                        item => item.PerformTasksRating,
                                        new SelectList(
                                            new[]
                                            {
                                                new {Value = "1", Text = "1 - Worst"},
                                                new {Value = "2", Text = "2"},
                                                new {Value = "3", Text = "3"},
                                                new {Value = "4", Text = "4"},
                                                new {Value = "5", Text = "5"},
                                                new {Value = "6", Text = "6"},
                                                new {Value = "7", Text = "7"},
                                                new {Value = "8", Text = "8"},
                                                new {Value = "9", Text = "9"},
                                                new {Value = "10", Text = "10 - Best"}
                                            }, "Value", "Text", Model),
                                        "Quality of Life at the Moment", new { @class = "form-control border-input" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12"><br>Hospitalization in Last 30 Days</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.HospitalizationLast30Days, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Colon Cancer Screen: Date</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.ColonCancerScreenDate, new { htmlAttributes = new { @class = "form-control border-input ScreenDatedatePicker" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Mammogram Screen: Date</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.MammogramScreenDate, new { htmlAttributes = new { @class = "form-control border-input ScreenDatedatePicker" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Urinary Incontinence</label>
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.UrinaryIncontinence, new { htmlAttributes = new { @class = "form-control border-input" } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Immunization</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.Immunization, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Tobacco and Alcohol Screening</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.TobaccoAlcoholScreening, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Allergies/Side Effects To Medication</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.Allergies, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Medication Management Intervention</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.ManagingMedicationInterventions, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Managing Medication Monitoring</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.ManagingMedicationReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Medication Management Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.ManagingMedicationGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Mental Resilience Interventions</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.MentalResilienceInterventions, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Mental Resilience Monitoring</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.MentalResilienceReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Mental Resilience Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.MentalResilienceGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Nutrition Interventions</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.NutritionInterventions, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Nutrition Monitoring</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.NutritionReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Nutrition Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.NutritionGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">

                                    <label class="col-md-12">Physical Activity Interventions</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PhysicalActivityInterventions, new { @class = "form-control border-input", rows = "10" })
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Physical Activity Monitoring</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PhysicalActivityReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">

                                    <label class="col-md-12">Physical Activity Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PhysicalActivityGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Sleep Interventions</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.SleepInterventions, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Sleep Monitoring</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.SleepReview, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Sleep Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.SleepGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Patient Compliance Management</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PatientComplianceManagement, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-md-12">Pharmacy Treatment Goals</label>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.PharmacyTreatmentGoals, new { @class = "form-control border-input", rows = "10" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">

                                </div>
                            </div>
                        </div>





                        <div class="form-group finalcareplanbuttondiv">
                            <input type="button" value="Save Final Care Plan Notes" class="btn btn-success logdetails" onclick="autosavedata()" />

                            @Html.ActionLink("Generate Plan PDF",
                                 "GenerateFinalCarePdfForVersion", "FinalCarePlan",
                                 new { patientId = Model.PatientId, version = Model.Version },
                                 new { @class = "btn btn-success logdetails", target = "_blank" })
                            @if (User.IsInRole("Admin"))
                            {

                                <a onclick="DeleteFinalCarePlan('FinalCarePlan', '_DeleteFinalCarePlanForVersion','@Model.PatientId','@Model.Version')" id="btnDelete" class="btn btn-danger" style="margin-top:10px;">Delete Plan</a>

                                @*@Html.ActionLink("Delete Plan",
                                    "_DeleteFinalCarePlanForVersion", "FinalCarePlan",
                                    new { patientId = Model.PatientId, version = Model.Version },
                                    new { @class = "btn btn-danger", onclick = "return confirm('Are you sure you want to delete this plan?');" })*@
                            }

                        </div>
                    </div>
                </fieldset>

            }

        </div>
    </div>
</div>
<script>
    function DeleteFinalCarePlan(controler, action, id,guid) {
        /*data deleted Successfully*/
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            preConfirm: function () {
                debugger;
                return new Promise(function (resolve) {
                    /*
                    Ajax code will be here
                    */
                    debugger;
                    $(".loader").show();
                    var URL = "/" + controler + "/" + action + "?patientId=" + id + "&version=" + guid;
                    $.ajax({
                        url: URL,
                        type: "GET",
                        success: function (result) {
                            debugger;
                            if (result == "True") {
                                swal(
                                    "Deleted",
                                    "Deleted Successfully...!",
                                    "success"
                                );
                                $(".loader").hide();
                                $("a#careplan").trigger("click");
                            }
                        }, error: function () {
                            $(".loader").hide();
                        }
                    });
                });

            },
            //allowOutsideClick: false,
            //showLoaderOnConfirm: false
        }).catch(swal.noop);
    }
    $(document).ready(function () {

        $('.ScreenDatedatePicker').datepicker();

        @*$('.ScreenDatedatePicker').datepicker();
            var error = '@ViewBag.Errors';
            if (error != "") {
                swal(error);
          }*@
          debugger;
           $("#divMedicationsList").load('/CurrentMedication/MedicationListPartialNew', { patientId: @Model.PatientId }, function(){
               $('#medicationsTable').DataTable({
                   responsive: true,
                   pageLength: 100,

               });
           });
            });
            function autosavedata() {
                debugger;


                $(".loader").show();
                $.ajax({
                    type: 'POST',
                    url: '/FinalCarePlanNotes/InsertFinalCarePlan',
                    data: $('#frmfinalcareplane').serialize(),

                    success: function (data, textStatus, jqXHR) {
                        $(".loader").hide();
                        if (data == "True") {

                            //$(".fixedpostitiondivmessage").fadeIn(500).delay(2000).fadeOut(1000);
                            swal("Saved", "Saved Successfully...!", "success");
                        }
                        else {
                            swal("Error!", "Error Accured :" + data, "error");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $(".loader").hide();
                    }
                });
            }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*@if (User.IsInRole("Liaison"))
        {
            <script type="text/javascript">
                function get_browser() {
                    var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
                    if (/trident/i.test(M[1])) {
                        tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
                        return { name: 'IE', version: (tem[1] || '') };
                    }
                    if (M[1] === 'Chrome') {
                        tem = ua.match(/\bOPR|Edge\/(\d+)/)
                        if (tem != null) { return { name: 'Opera', version: tem[1] }; }
                    }
                    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
                    if ((tem = ua.match(/version\/(\d+)/i)) != null) { M.splice(1, 1, tem[1]); }
                    return {
                        name: M[0],
                        version: M[1]
                    };
                }





                function reviewTimePost() {

                    var browser = get_browser();
                    var asynctype = true;
                    if (browser.name == 'Firefox') {
                        asynctype = false;
                    }

                    $.ajax({
                        url: "/PatientProfile/ReviewTimePost",
                        data: { "reviewId":@ViewBag.ReviewId, "activity": $("#activityperformed").val()},
                        type: "POST",
                        async: asynctype

                    });
                }
            </script>
        }*@
    @*<script type="text/javascript">
            function autosavedata() {
                var data = $('#finalcareplane').serialize();

                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '/FinalCarePlanNotes/InsertFinalCarePlan',
                    data: data,
                    success: function (data, textStatus, jqXHR) {

                        $(".fixedpostitiondivmessage").fadeIn(500).delay(2000).fadeOut(1000);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            }
                    //setInterval(function () {

                    //    autosavedata();
                    //}, 120000);
        </script>*@
}
