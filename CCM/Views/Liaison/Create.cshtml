@model CCM.Models.Liaison
@using CCM.Models.CCMBILLINGS;

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.9.1/sweetalert2.css">
<div class="container">
    <div class="row">
        <div class="col-sm-3">
            <h3>Add New Counselor/Translator</h3>
        </div>

        <div class="col-sm-9 text-center" style="background-color:azure;display:none" id="displaymsg">

            <h3>@ViewBag.Message</h3>

            @if (!string.IsNullOrEmpty(ViewBag.Password))
            {
                <p>Login Id: @ViewBag.Username</p>
                <p>Temporary Password: @ViewBag.Password</p>
            }
        </div>
    </div>
    <hr />

    @using (Html.BeginForm("Create", "Liaison", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data", id = "createliasion" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Is Translator", new { @class = "control-label col-md-2" })
                <div class="col-md-4">


                    @Html.CheckBoxFor(m => m.IsTranslator)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(
                    item => item.Gender,
                    new SelectList(
                        new[]
                        {
                            new { Value = "Male",   Text = "Male" },
                            new { Value = "Female", Text = "Female" },
                        }, "Value", "Text", Model),
                    "Select Gender", new { @class = "form-control border-input" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                    @Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrimaryLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PrimaryLanguage, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SecondaryLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SecondaryLanguage, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TertiaryLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.TertiaryLanguage, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control border-input" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    <input type="file" name="UserPhoto" id="fileUpload" class="form-control border-input" accept=".png,.jpg,.jpeg,.gif,.tif" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SkillLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(
                    item => item.SkillLevel,
                    new SelectList(
                        new[]
                        {
                            new { Value = "1",  Text = "1" },
                            new { Value = "2",  Text = "2" },
                            new { Value = "3",  Text = "3" },
                        }, "Value", "Text", Model),
                    "Select Skill Level", new { @class = "form-control border-input" })
                    @Html.ValidationMessageFor(model => model.SkillLevel, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PayRate, "Pay Rate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PayRate, new { htmlAttributes = new { @class = "form-control border-input", placeholder = "Required" } })
                    @Html.ValidationMessageFor(model => model.PayRate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("CallerID", "Caller ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.DropDownListFor(model => model.TwilioCallerId,
                                 new SelectList(ViewBag.TwilioAvailableNumbers, "Value", "Text", Model),
                                     new { @class = "form-control border-input select2", id = "ddlCallerID" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Category</label>
                <div class="col-md-10">
                    <div style="display:inline-flex;margin-top: 7px;">
                        @foreach (var item in ViewBag.BillingCategories)
                        {
                            <label class="d-block" style="margin-right: 12px;font-weight:100; font-size: 13px;"><input type="checkbox" value="@item.BillingCategoryId" id="@("billingCategoryCheckBox"+item.BillingCategoryId)" data-identifier="@item.Name" onclick="SelectUnselectCategory(@item.BillingCategoryId)" name="billingCategory" /> @item.Name  </label>
                        }
                    </div>
                </div>
            </div>

        </div>
        @*<div class="form-horizontal col-md-6">
                <h3>Salary Rates</h3>
                <hr />
                <div class="form-group">
                    @Html.Label("CCM 20 Minutes - CPT 99490 *", htmlAttributes: new { @class = "control-label col-md-8" })
                                                                                                             <div class="col-md-3">
                        @Html.Editor("CPT99490Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Simple CCM 30 Minutes - CPT 99491 *", htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-3">
                        @Html.Editor("CPT99491Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Complex CCM 60 Minutes - CPT 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-3">
                        @Html.Editor("CPT99487Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Additional CCM 30 Minutes - CPT 99489 + 99487 *", htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-3">
                        @Html.Editor("CPT99489Billing", new { htmlAttributes = new { @class = "form-control border-input numbers-only", placeholder = "Required", required = "required" } })

                    </div>
                </div>


            </div>*@
        try
        {
        <div class="col-md-8 pull-left">
            <div class="">
                <div class="panel panel-primary">
                    <div class="panel-heading" style="padding: 20px 15px;background-color: #0364bd">
                        <h3 style="margin-top: -14px;" class="col-sm-5">Business hours</h3>

                    </div>
                    <div class="panel-body" style="padding: 0px;margin-top: 7px;">
                        <div class="row">
                            <div class="col-sm-12 " style="text-align: center;padding-top: 9px;padding: 0px;">
                                <div class="row">
                                    <div class="row">
                                        <div class="col-sm-4 form-group" style="text-align: center;padding-top: 9px;">
                                            <label>Bulk Time Change</label>
                                            <input type="checkbox" id="chkbulk" class="checkbox check-mark" style="z-index:123;" />
                                        </div>
                                        <div class="col-sm-8" style="margin-top:10px;padding: 0px;">
                                            <label class="text-orange" style="text-align:left;color:blue;width: 104%;">*Please Select Monday Timing 1st then Click on Checkbox for Bulk Assign*</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="">
                                    <div class="table-responsive">
                                        <table class=" date-table-phyC date-table-phy  table">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        Days
                                                    </th>

                                                    <th>
                                                        Start Time
                                                    </th>
                                                    <th>
                                                        End Time
                                                    </th>
                                                    <th>
                                                        Holiday
                                                    </th>

                                                </tr>
                                            </thead>
                                            @for (int i = 0; i < ViewBag.DayList.Count; i++)
                                            {
                                                <tr class="row-select" id="tr@(ViewBag.DayList[i].WeekDayName)">
                                                    <td>
                                                        <label class="day-@i">@ViewBag.DayList[i].WeekDayName</label>
                                                        <input type="text" name="WeekDays" value="@ViewBag.DayList[i].WeekDayName" style="display:none" />
                                                    </td>

                                                    <td>

                                                        <div class="date" id="dtp1">
                                                            <input type="text" id="txtStart" name="StartTime" class="form-control datetime Starttime-@i" value="@ViewBag.DayList[i].StartTime.ToString("HH:mm")" required style="margin-top: 0;" />

                                                        </div>
                                                    </td>
                                                    <td>


                                                        <div class="date" id="dtp2">
                                                            <input type="text" name="EndTime" id="txtEnd" class="form-control datetime EndTime-@i" value="@ViewBag.DayList[i].EndTime.ToString("HH:mm")" required style="margin-top: 0;" />

                                                        </div>


                                                    </td>
                                                    <td>
                                                        <label class="custom-checkbox custom-weight">
                                                            <input type="checkbox" class="IsHollyDay-@i" data-weekname="@ViewBag.DayList[i].WeekDayName" id="chk@(ViewBag.DayList[i].WeekDayName)" onchange="enabledisablerow('@ViewBag.DayList[i].WeekDayName')" /><span></span>
                                                        </label>
                                                        <input type="hidden" name="isHoliday" value="false" id="hf@(ViewBag.DayList[i].WeekDayName)" />
                                                    </td>
                                                    @*<td>
                                <label>@ViewBag.DayList[i].ClinicTimingStr</label>
                            </td>*@
                                                </tr>
                                            }

                                        </table>
                                    </div>
                                </div>

                            </div>
                                </div>
                                </div>
                                </div>
                                </div>

                




                                @*<div class="row">
                                    <h2 class="col-sm-3">Business hours</h2>
                                    <div class="col-sm-2 form-group" style="text-align: right;padding-top: 9px;">
                                        <label>Bulk Time Change</label>
                                        <input type="checkbox" id="chkbulk" class="checkbox check-mark" />
                                    </div>
                                    <div class="col-sm-3" style="margin-top:10px;">
                                        <label class="text-orange" style="text-align: right;color:blue">*Please Select Monday Timing 1st then Click on Checkbox for Bulk Assign*</label>
                                    </div>
                                </div>*@

                            </div>

                            }
                            catch (System.Exception ex)
                            {

                            }



                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-4">
                                    <input type="submit" value="Save" class="btn btn-success" />
                                </div>
                            </div>
                            }
                        </div>


                        @Scripts.Render("~/bundles/jqueryval")
                        <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.9.1/sweetalert2.js"></script>
                        <script type="text/javascript">
    function enabledisablerow(id) {

        var ischecked = $("#chk" + id).prop("checked");

        if (ischecked == true) {
            $("#hf" + id).val(true);
            $("#tr" + id + " #txtStart").attr('disabled', 'disabled');
            $("#tr" + id + " #txtEnd").attr('disabled', 'disabled');
        }
        else {
            $("#hf" + id).val(false);
            $("#tr" + id + " #txtStart").removeAttr('disabled');
            $("#tr" + id + " #txtEnd").removeAttr('disabled');

        }
    }

    const SelectUnselectCategory = id => {
        debugger;

        //if ($("#billingCategoryCheckBox" + id).prop("checked") == true) {

        //    if ($("#billingCategoryCheckBox" + id).data('identifier') == "CCM") {
        //        $('[data-identifier="G0506 INITIAL VISIT"]').prop("checked", true);
        //    }
        //    if ($("#billingCategoryCheckBox" + id).data('identifier') == "G0506 INITIAL VISIT") {
        //        $('[data-identifier="CCM"]').prop("checked", true);
        //    }
        //} else {
        //    if ($("#billingCategoryCheckBox" + id).data('identifier') == "CCM") {
        //        $('[data-identifier="G0506 INITIAL VISIT"]').prop("checked", false);
        //    }
        //    if ($("#billingCategoryCheckBox" + id).data('identifier') == "G0506 INITIAL VISIT") {
        //        $('[data-identifier="CCM"]').prop("checked", false);
        //    }
        //}
    }
    $(document).ready(function () {
        debugger;
        var msg = "@ViewBag.Password";
        var usrename = "@ViewBag.Username"
        var message = '@ViewBag.Message'
        if (message != "") {
            swal(message);
        }
        if (msg != "" && msg != "null") {
            swal({
                title: 'Success',
                html: "User Created successfully.<br /><b>Username:</b> " + usrename + " <br /><b>Password:</b>" + msg,
                type: 'info',
                showCancelButton: false,
                allowOutsideClick: false,
                confirmButtonColor: '#3085d6',


                preConfirm: function () {
                    return new Promise(function (resolve) {
                        /* Ajax code will be here*/
                        window.location = "/Liaison";

                    });

                },
                //allowOutsideClick: false,
                //showLoaderOnConfirm: false
            }).catch(swal.noop);

            $("input[type=text], textarea").val("");
        }
        //setTimeout(function () {
        //    $("#displaymsg").fadeOut();
        //}, 5000);
        $('.datetime').datetimepicker({
            format: 'LT'
        });
        $(".numbers-only").keypress(function (e) {
            if (e.which == 46) {
                if ($(this).val().indexOf('.') != -1) {
                    return false;
                }
            }

            if (e.which != 8 && e.which != 0 && e.which != 46 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
        //$("input[type=text], textarea").val("");
        $('#createliasion').submit(function (event) {
            var isvalidform = true;


            $(".numbers-only").each(function () {
                if ($(this).val() == "") {
                    isvalidform = false;
                }
            });

            if (isvalidform == false) {
                event.preventDefault();
                return false;
            }

            if ($('input[name ="billingCategory"]:checked').val() == null) {
                swal("Warning", "Please Select Billing Category", "warning");
                event.preventDefault();
                return false;
            }


        });
        $('#chkbulk').click(function () {
            if ($(this).is(":checked")) {
                var start = $(".Starttime-0").val();
                $('input[name="StartTime"]').val(start);

                var start = $(".EndTime-0").val();
                $('input[name="EndTime"]').val(start);
            }
        });


    });
                        </script>
