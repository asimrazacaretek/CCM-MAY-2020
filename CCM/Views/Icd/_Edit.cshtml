@model CCM.Models.Icd10Codes

@{
    ViewBag.Title = "Edit";
}
<style>
    .form-horizontal .control-label {
        text-align: left;
    }
</style>
@using (Html.BeginForm("_Edit", "Icd", FormMethod.Post,
  new { id = "frmDiagnosisUpdate", @class = "frmStyle" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PatientId)

    <div class="form-horizontal">
        <div class="custom-title">
            <h4>
                Icd10Codes
            </h4>
        </div>
        <h3 class="inner-heading">Edit</h3>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Code10, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Code10, new { htmlAttributes = new { @class = "form-control", id = "Eicd10" } })
                @Html.ValidationMessageFor(model => model.Code10, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Code9, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Code9, new { htmlAttributes = new { @class = "form-control", id = "Eicd9dx" } })
                @Html.ValidationMessageFor(model => model.Code9, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.DiseaseState, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.DropDownListFor(
                               model => model.DiseaseState,
                               new SelectList(
                                   new[]
                                   {
                                       new {Value = "High Blood Presure",  Text = "High Blood Presure"},
                                       new {Value = "Sugar",  Text = "Sugar"},
                                   },
                                   "Value", "Text", Model.DiseaseState),
                              new { @class = "form-control border-input", id = "DiseaseState" })

                @*<select class="form-control border-input" id="DiseaseState">
                    <option value="High Blood Presure">High Blood Presure</option>
                    <option value="Sugar">Sugar</option>
                </select>*@
            </div>
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.DiseaseType, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.DropDownListFor(
                               model => model.DiseaseType,
                               new SelectList(
                                   new[]
                                   {
                                       new {Value = "Accute",  Text = "Accute"},
                                       new {Value = "Reoccuring",  Text = "Reoccuring"},
                                       new {Value = "Chronic",   Text = "Chronic"},
                                   },
                                   "Value", "Text", Model.DiseaseType),
                              new { @class = "form-control border-input", id = "DiseaseType" })

                @*<select class="form-control border-input" id="DiseaseType">
                    <option value="Accute">Accute</option>
                    <option value="Reoccuring">Reoccuring</option>
                    <option value="Chronic">Chronic</option>
                </select>*@
            </div>
        </div>
        @*
                <!---Patient ID---------------->
                <div class="form-group">
                @Html.LabelFor(model => model.PatientId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PatientId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group col-md-2 pull-left">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control datepicker " } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12 pull-left">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DiseaseHistory, htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.TextAreaFor(model => model.DiseaseHistory, new { @class = "form-control border-input col-md-12", rows = "5" })
                @Html.ValidationMessageFor(model => model.DiseaseHistory, "", new { @class = "text-danger" })
                @*@Html.TextArea("DiseaseHistory1", new { @class = "form-control border-input", rows = "5" })*@
            </div>
        </div>
        <div class="form-group col-md-12 pull-left">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Update" class="btn btn-default logdetails" onclick="SubmitForm('frmDiagnosisUpdate','Update')" />
                <a class="btn btn-success logdetails" onclick="AjaxRefresh('Icd','_Index',@Model.PatientId)"> Back to List</a>
            </div>
        </div>
    </div>
}
    <script>
        //$("form").submit(function () {
        //    debugger;
        //    var form = $(this);
        //    var formdata = false;
        //    if (window.FormData) {
        //        formdata = new FormData(form[0]);
        //    }
        //    var urltosend = $("#frmUpdateDiagnosis").attr('action');
        //    //var datatosend = $("#createform").serialize();
        //    var datatosend = formdata ? formdata : form.serialize();
        //    $(".loader").show();
        //    $.ajax({
        //        type: 'POST',
        //        url: urltosend,
        //        data: datatosend,
        //        cache: false,
        //        contentType: false,
        //        processData: false,
        //        success: function (json) {
        //            $(".loader").hide();
        //            if (json == "True") {
        //                swal({
        //                    title: "Saved!",
        //                    text: json,
        //                    icon: "success",
        //                    button: "Ok",
        //                    confirmButtonColor: "#1ab394",
        //                });
        //                $("input:text").val("");
        //            }
        //            else { swal("Error!", "Error Accured :" + json, "error"); }
        //        },
        //        error: function (xhr, status, error) {
        //            $(".loader").hide();
        //            var err = eval("(" + xhr.responseText + ")");
        //            //;
        //            swal("Error!", "Error Accured :" + err.Message, "error");
        //        }
        //    });

        //    return false;
        //});
    </script>
    @*<div>
            @Html.ActionLink("Back to List", "Index", new { patientId = Model.PatientId }, new { @class = "logdetails" })
        </div>*@
    <script>
        $(".datepicker").datepicker();
        new Def.Autocompleter.Search('Eicd10', 'https://clinicaltables.nlm.nih.gov/api/icd10cm/v3/search?sf=code,name',
            { tableFormat: true, valueCols: [0, 1], colHeaders: ['Code', 'Name'] });


        new Def.Autocompleter.Search('Eicd9dx', 'https://clinicaltables.nlm.nih.gov/api/icd9cm_dx/v3/search',
            { tableFormat: true, valueCols: [0, 1], colHeaders: ['Code', 'Name'] });

    </script>
    @if (User.IsInRole("Liaison"))
    {
        <SCRIPT type="text/javascript">


            function reviewTimePost() {
                @*$.ajax({
                    url: "/PatientProfile/ReviewTimePost?reviewId=@ViewBag.ReviewId&activity=" + $("#activityperformed").val(),
                    type: "POST",
                    async: true,
                    success: function () {



                    },
                    error: function (error) {
                        Showerrormsg1(error.statusText);
                    }
                });*@
            }
        </SCRIPT>
    }