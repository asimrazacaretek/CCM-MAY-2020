@model CCM.Models.ChangePasswordViewModel

<div class="container">
    <h3>Change Password</h3>
    <hr />
    <ul>
        <li>New password must have at least one non letter or digit character. </li>
        <li>New password must have at least one lowercase ('a'-'z').</li>
        <li>New password must have at least one uppercase ('A'-'Z').</li>
    </ul>
    <br>

            @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()


                <div class="form-group">
                    @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <input type="hidden" name="Useremail" value="@ViewBag.EmailAddress" />
                <div class="form-group">
                    @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-4">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change password" class="btn btn-success" style="width:200px" />

                                
                      
                    </div>
                </div>


    

            }
    
            @using (Html.BeginForm("ResetPassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                    @if (User.IsInRole("Admin"))
                    {
                        <br>
                        <br>
                        <i>Admins can change user's password to a temporary <br>
                           value (without knowing existing password)  <br>
                           by clicking 'Reset password' button below:</i><br><br>

                        <input id="email" name="email" style="display:none" value='@Request.QueryString["email"]' />
                        <input type="submit" value="Reset password" class="btn btn-success" style="width:200px" />
                    }
                    </div>
                </div>
            }

            <br>
            <br>
            
    


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}