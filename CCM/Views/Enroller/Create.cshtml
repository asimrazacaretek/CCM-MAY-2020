@model CCM.Models.SaleStaff

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-sm-3">
        <h3>Add New Enroller</h3>
    </div>

    <div class="col-sm-9 text-center" style="background-color:azure">
        <h3>@ViewBag.Message</h3>

        @if (!string.IsNullOrEmpty(ViewBag.Password))
        {
            <p>Login Id: @Model.Email</p>
            <p>Temporary Password: @ViewBag.Password</p>
        }
    </div>
</div>
<hr />
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                item => item.Gender,
                new SelectList(
                    new[]
                    {
                        new { Value = "Male",   Text = "Male" },
                        new { Value = "Female", Text = "Female" },
                    }, "Value", "Text", Model),
                "Select Gender", new { @class = "form-control border-input" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "form-control", maxlength = "10", required = "required" } })
                @Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Required", required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        @try
        {
            <div class="form-group">
                <div class=" col-md-2"></div>
                <div class="col-md-10 pull-left">
                    <div class="row">
                        <h2 class="col-sm-3">Business hours</h2>
                        <div class="col-sm-2 form-group" style="text-align: right;padding-top: 9px;">
                            <label>Bulk Time Change</label>
                            <input type="checkbox" id="chkbulk" class="checkbox check-mark" />
                        </div>
                        <div class="col-sm-6" style="margin-top:10px;">
                            <label class="text-orange" style="text-align: right;color:blue">*Please Select Monday Timing 1st then Click on Checkbox for Bulk Assign*</label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-10">
                            <div class="table-responsive">
                                <table class=" date-table-phyC date-table-phy  table">
                                    <thead>
                                        <tr>
                                            <th>
                                                Days
                                            </th>

                                            <th>
                                                Start Time
                                            </th>
                                            <th>
                                                End Time
                                            </th>
                                            <th>
                                                Holiday
                                            </th>

                                        </tr>
                                    </thead>
                                    @for (int i = 0; i < ViewBag.DayList.Count; i++)
                                    {
                                        <tr class="row-select" id="tr@(ViewBag.DayList[i].WeekDayName)">
                                            <td>
                                                <label class="day-@i">@ViewBag.DayList[i].WeekDayName</label>
                                                <input type="text" name="WeekDays" value="@ViewBag.DayList[i].WeekDayName" style="display:none" />
                                            </td>

                                            <td>

                                                <div class="date" id="dtp1">
                                                    <input type="text" id="txtStart" name="StartTime" class="form-control datetime Starttime-@i" value="@ViewBag.DayList[i].StartTime.ToString("HH:mm")" required style="margin-top: 0;" />

                                                </div>
                                            </td>
                                            <td>


                                                <div class="date" id="dtp2">
                                                    <input type="text" name="EndTime" id="txtEnd" class="form-control datetime EndTime-@i" value="@ViewBag.DayList[i].EndTime.ToString("HH:mm")" required style="margin-top: 0;" />

                                                </div>


                                            </td>
                                            <td>
                                                <label class="custom-checkbox custom-weight">
                                                    <input type="checkbox" class="IsHollyDay-@i" data-weekname="@ViewBag.DayList[i].WeekDayName" id="chk@(ViewBag.DayList[i].WeekDayName)" onchange="enabledisablerow('@ViewBag.DayList[i].WeekDayName')" /><span></span>
                                                </label>
                                                <input type="hidden" name="isHoliday" value="false" id="hf@(ViewBag.DayList[i].WeekDayName)" />
                                            </td>
                                            @*<td>
                                                    <label>@ViewBag.DayList[i].ClinicTimingStr</label>
                                                </td>*@
                                        </tr>
                                    }

                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }
        catch (System.Exception ex)
        {

        }
        <div class="form-group">
            <div class="row">
                <div class="col-md-offset-2 col-md-10">
                    <div class="col-md-4">
                        <input type="submit" value="Create" class="btn btn-default" />
                        <a class="btn btn-danger" href="/Enroller/Index">Back to List</a>

                    </div>
                </div>
            </div>
        </div>

    </div>
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>

<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
<script>
    function enabledisablerow(id) {

        var ischecked = $("#chk" + id).prop("checked");

        if (ischecked == true) {
            $("#hf" + id).val(true);
            $("#tr" + id + " #txtStart").attr('disabled', 'disabled');
            $("#tr" + id + " #txtEnd").attr('disabled', 'disabled');
        }
        else {
            $("#hf" + id).val(false);
            $("#tr" + id + " #txtStart").removeAttr('disabled');
            $("#tr" + id + " #txtEnd").removeAttr('disabled');

        }
    }
    $('.datetime').datetimepicker({
        format: 'LT'
    });
    $('#chkbulk').click(function () {
        if ($(this).is(":checked")) {
            var start = $(".Starttime-0").val();
            $('input[name="StartTime"]').val(start);

            var start = $(".EndTime-0").val();
            $('input[name="EndTime"]').val(start);
        }
    });
</script>
