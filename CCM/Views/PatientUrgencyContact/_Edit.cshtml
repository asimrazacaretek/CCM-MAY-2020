@model CCM.Models.PatientProfile_UrgencyContact

@*@Html.Action("_CcmActivityLinks", "CcmStatus", new { patientId = Model.PatientId })*@
<style>
    .panel-body {
        width: 100%;
        overflow-x: scroll;
    }

    .form-horizontal .control-label {
        text-align: left;
    }
</style>
<div>
    <div class="custom-title">
        <h3>MEDICAL URGENCY CONTACTS</h3>
    </div>
    @using (Html.BeginForm("_Edit", "PatientUrgencyContact", FormMethod.Post,
 new { id = "frmUpdatePatientUrgencyContact", @class = "frmStyle" }))
    {
        @Html.ValidationSummary()
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.PatientId)
        @Html.HiddenFor(model => model.Id)
        <div class="form-horizontal">
            @*<p style="font-size: 1.35em; font-weight: bold; padding: 10px 0; color: #74B34A">Primary Urgency Contact</p>*@

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryProfesionalCareProvider, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(item => item.PrimaryProfesionalCareProvider,
                                new SelectList(
                                    new[]
                                    {
                                        new {Value = "Profesional Care",  Text = "Profesional Care"},
                                        new {Value = "Family Member", Text = "Family Member"}
                                    },
                                    "Value", "Text", Model), new { @class = "form-control border-input", id = "PrimaryProfesionalCareProvider" })
                            @Html.ValidationMessageFor(model => model.PrimaryProfesionalCareProvider, "", new { @class = "text-danger" })


                            @*@Html.DropDownListFor(model => model.PrimaryProfesionalCareProvider, new SelectList(ViewBag.ProfesionalCareProvider, "Value", "Text", Model), "Select Profesional Care Provider", new { @class = "form-control border-input" })
                                @Html.ValidationMessageFor(model => model.PrimaryProfesionalCareProvider, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                </div>


                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryRelationship, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(item => item.PrimaryRelationship,
                               new SelectList(
                                   new[]
                                   {
                                        new {Value = "N/A",  Text = "N/A"},
                                       new {Value = "Father",  Text = "Father"},
                                       new {Value = "Mother", Text = "Mother"},
                                       new {Value = "Brother",  Text = "Brother"},
                                       new {Value = "Sister", Text = "Sister"},
                                       new {Value = "Son",  Text = "Son"},
                                       new {Value = "Daughter", Text = "Daughter"},
                                         new {Value = "Friend", Text = "Friend"},

                                   },
                                   "Value", "Text", Model.PrimaryRelationship), new { @class = "form-control border-input validaterefillinfo", id = "PrimaryRelationship" })
                            @Html.ValidationMessageFor(model => model.PrimaryRelationship, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryName, new { htmlAttributes = new { @class = "form-control border-input validaterefillinfo" } })
                            @Html.ValidationMessageFor(model => model.PrimaryName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryMobilePhoneNumber, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryMobilePhoneNumber, new { htmlAttributes = new { @class = "form-control border-input validaterefillinfo" } })
                            @Html.ValidationMessageFor(model => model.PrimaryMobilePhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryMobilePhoneNumber1, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryMobilePhoneNumber1, new { htmlAttributes = new { @class = "form-control border-input validaterefillinfo" } })
                            @Html.ValidationMessageFor(model => model.PrimaryMobilePhoneNumber1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryHomePhoneNumber, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryHomePhoneNumber, new { htmlAttributes = new { @class = "form-control border-input" } })
                            @Html.ValidationMessageFor(model => model.PrimaryHomePhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryHomePhoneNumber1, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryHomePhoneNumber1, new { htmlAttributes = new { @class = "form-control border-input" } })
                            @Html.ValidationMessageFor(model => model.PrimaryHomePhoneNumber1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryExpertise, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryExpertise, new { htmlAttributes = new { @class = "form-control border-input" } })
                            @Html.ValidationMessageFor(model => model.PrimaryExpertise, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryHealthProxyAndCarplane, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(item => item.PrimaryHealthProxyAndCarplane,
                                new SelectList(
                                    new[]
                                    {
                                        new {Value = "true",  Text = "Yes"},
                                        new {Value = "false", Text = "No"}
                                    },
                                    "Value", "Text", Model.PrimaryHealthProxyAndCarplane), new { @class = "form-control border-input", id = "PrimaryHealthProxyAndCarplane" })
                            @Html.ValidationMessageFor(model => model.PrimaryHealthProxyAndCarplane, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryEmail, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PrimaryEmail, new { htmlAttributes = new { @class = "form-control border-input", type = "email" } })
                            @Html.ValidationMessageFor(model => model.PrimaryEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PrimaryIsShareCarePlan, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(item => item.PrimaryIsShareCarePlan,
                                new SelectList(
                                    new[]
                                    {
                                        new {Value = "true",  Text = "Yes"},
                                        new {Value = "false", Text = "No"}
                                    },
                                    "Value", "Text", Model.PrimaryIsShareCarePlan), new { @class = "form-control border-input", id = "PrimaryIsShareCarePlan" })
                            @Html.ValidationMessageFor(model => model.PrimaryIsShareCarePlan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactType, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(item => item.ContactType,
                                new SelectList(
                                    new[]
                                    {
                                        new {Value = "Primary",  Text = "Primary"},
                                        new {Value = "Secondary", Text = "Secondary"}
                                    },
                                    "Value", "Text", Model.ContactType), new { @class = "form-control border-input", id = "ContactType" })
                            @Html.ValidationMessageFor(model => model.ContactType, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <br />
                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="button" value="Update" class="btn btn-success logdetails" onclick="SubmitForm('frmUpdatePatientUrgencyContact','Update')" />
                            <a class="btn btn-success logdetails" onclick="GetAjaxView('/PatientUrgencyContact/_Index', '@Model.PatientId','medical-urg')"> Back to List</a>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")

    @if (User.IsInRole("Liaison"))
    {
        <SCRIPT type="text/javascript">


        function reviewTimePost() {
            $.ajax({
                url: "/PatientProfile/ReviewTimePost?reviewId=@ViewBag.ReviewId&activity=" + $("#activityperformed").val(),
                type: "POST",
                async: true,
                success: function () {
                },
                error: function (error) {
                    Showerrormsg1(error.statusText);
                }
            });
        }
        </SCRIPT>
    }
}